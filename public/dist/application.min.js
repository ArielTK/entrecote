"use strict";var ApplicationConfiguration=function(){var applicationModuleName="entrecote",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","ngGrid"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("categories"),ApplicationConfiguration.registerModule("common"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("categories").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Categories","categories","dropdown","/categories","fa-align-justify",!1,"admin"),Menus.addSubMenuItem("topbar","categories","New Category","openNewCategoryWindow","/categories",!1,"admin")}]),angular.module("categories").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCategories",{url:"/categories",templateUrl:"modules/categories/views/list-categories.client.view.html"})}]),angular.module("categories").controller("CategoriesController",["$scope","$stateParams","$location","Authentication","Categories","$modal","Alerts",function($scope,$stateParams,$location,Authentication,Categories,$modal,Alerts){$scope.authentication=Authentication,$scope.authentication.validateSignin(),$scope.selectedCategory=[],$scope.gridOptions={data:"categories",multiSelect:!1,showFooter:!0,selectedItems:$scope.selectedCategory,columnDefs:[{field:"name",displayName:"Name"},{field:"description",displayName:"Description"},{field:"created",displayName:"Created Date",cellFilter:"date"},{field:"user.displayName",displayName:"User"}]},$scope.gridSearchFunc=function(){$scope.find()},$scope.openNewCategoryWindow=function(){var createModal=$modal.open({templateUrl:"modules/categories/views/category.client.view.html",controller:"CreateCategoryController"});createModal.result.then(function(){$scope.find()},function(){console.log("Modal dismissed at: "+new Date)})},$scope.openEditCategoryWindow=function(category){if($scope.selectedCategory.length>0){var createModal=$modal.open({templateUrl:"modules/categories/views/category.client.view.html",controller:"EditCategoryController",resolve:{category:function(){return category}}});createModal.result.then(function(){$scope.find()},function(){console.log("Modal dismissed at: "+new Date)})}else Alerts.error("Please select Category to update")},$scope.remove=function(category){if(category){var message="Are you sure you want to delete category: "+category.name;Alerts.confirm(message,function(e){e&&(category.$remove(),$scope.find(),Alerts.success("Category deleted successfully"))})}else Alerts.error("Please select Category to delete")},$scope.find=function(){$scope.categories="undefined"!=typeof $scope.gridSearchData&&""!==$scope.gridSearchData?Categories.search({searchData:$scope.gridSearchData}):Categories.query()},$scope.findOne=function(){$scope.category=Categories.get({categoryId:$stateParams.categoryId})}}]),angular.module("categories").controller("CreateCategoryController",["$scope","$modalInstance","Categories","Alerts",function($scope,$modalInstance,Categories,Alerts){$scope.modalTitle="Create New Category",$scope.closeModal=function(){$modalInstance.dismiss("cancel")},$scope.save=function(categoryParam){$scope.isLoading=!0;var category=new Categories({name:categoryParam.name,description:categoryParam.description});category.$save(function(response){$modalInstance.close(response),Alerts.success("Category Added Successfully"),$scope.isLoading=!1},function(errorResponse){Alerts.error(errorResponse.data.message),$scope.isLoading=!1})}}]),angular.module("categories").controller("EditCategoryController",["$scope","$modalInstance","category","Alerts",function($scope,$modalInstance,category,Alerts){$scope.category=category,$scope.modalTitle="Edit Category "+category.name,$scope.closeModal=function(){$modalInstance.dismiss("cancel")},$scope.save=function(category){$scope.isLoading=!0,category.$update(function(){$modalInstance.close(),Alerts.success("Category updated Successfully"),$scope.isLoading=!1},function(errorResponse){Alerts.error(void 0!==errorResponse.data.message?errorResponse.data.message:errorResponse.data),$scope.isLoading=!1})}}]),angular.module("categories").factory("Categories",["$resource",function($resource){return $resource("categories/:categoryId",{categoryId:"@_id",searchData:"@_searchData"},{update:{method:"PUT"},search:{method:"GET",isArray:!0,url:"categories/search/:searchData"}})}]),angular.module("core").directive("focusMe",["$timeout",function($timeout){return{link:function(scope,element){$timeout(function(){element[0].focus()},100)}}}]),angular.module("core").directive("gridSearch",function(){return{template:'<form style="display:inline;"  ng-submit="gridSearchFunc()"><input type="search" placeholder="Search" class="input-search hidden-xs hidden-sm fa fa-search" focus-me ng-model="gridSearchData"></form>'}}),angular.module("core").directive("loading",["$compile",function($compile){return{restrict:"A",link:function(scope,element){var updateElement=function(newValue,oldValue){void 0!==newValue&&newValue!==oldValue&&(newValue===!0?(element.addClass("loading-mask"),element.prop("disabled",!0),$compile(element)(scope)):(element.removeClass("loading-mask"),element.prop("disabled",!1),$compile(element)(scope)))};updateElement(scope.loading,null),scope.$watch("loading",updateElement)},scope:{loading:"="}}}]),angular.module("core").directive("stretchHeight",["Sizer",function(Sizer){return{scope:{heightToRemove:"=stretchHeight"},link:function(scope,element){Sizer.updateElementSizeToStrech(element,scope.heightToRemove),Sizer.getWindowElement().on("resize",function(){Sizer.updateElementSizeToStrech(element,scope.heightToRemove)})}}}]),angular.module("common").directive("tableList",[function(){return{templateUrl:"modules/common/templates/table-list.client.template.html",restrict:"A",scope:{options:"=",data:"="},link:function(){}}}]),angular.module("common").factory("Alerts",[function(){var $,btnCancel,btnOK,btnReset,btnResetBack,btnFocus,elCallee,elCover,elDialog,elLog,form,input,getTransitionEvent,_alertify={},dialogs={},isopen=!1,keys={ENTER:13,ESC:27,SPACE:32},queue=[];return dialogs={buttons:{holder:'<nav class="alertify-buttons">{{buttons}}</nav>',submit:'<button type="submit" class="alertify-button alertify-button-ok" id="alertify-ok">{{ok}}</button>',ok:'<button class="alertify-button alertify-button-ok" id="alertify-ok">{{ok}}</button>',cancel:'<button class="alertify-button alertify-button-cancel" id="alertify-cancel">{{cancel}}</button>'},input:'<div class="alertify-text-wrapper"><input type="text" class="alertify-text" id="alertify-text"></div>',message:'<p class="alertify-message">{{message}}</p>',log:'<article class="alertify-log{{class}}">{{message}}</article>'},getTransitionEvent=function(){var t,type,supported=!1,el=document.createElement("fakeelement"),transitions={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"otransitionend",transition:"transitionend"};for(t in transitions)if(void 0!==el.style[t]){type=transitions[t],supported=!0;break}return{type:type,supported:supported}},$=function(id){return document.getElementById(id)},_alertify={labels:{ok:"OK",cancel:"Cancel"},delay:5e3,buttonReverse:!1,buttonFocus:"ok",transition:void 0,addListeners:function(fn){var ok,cancel,common,key,reset,hasOK="undefined"!=typeof btnOK,hasCancel="undefined"!=typeof btnCancel,hasInput="undefined"!=typeof input,val="",self=this;ok=function(event){return"undefined"!=typeof event.preventDefault&&event.preventDefault(),common(event),"undefined"!=typeof input&&(val=input.value),"function"==typeof fn&&("undefined"!=typeof input?fn(!0,val):fn(!0)),!1},cancel=function(event){return"undefined"!=typeof event.preventDefault&&event.preventDefault(),common(event),"function"==typeof fn&&fn(!1),!1},common=function(){self.hide(),self.unbind(document.body,"keyup",key),self.unbind(btnReset,"focus",reset),hasOK&&self.unbind(btnOK,"click",ok),hasCancel&&self.unbind(btnCancel,"click",cancel)},key=function(event){var keyCode=event.keyCode;(keyCode===keys.SPACE&&!hasInput||hasInput&&keyCode===keys.ENTER)&&ok(event),keyCode===keys.ESC&&hasCancel&&cancel(event)},reset=function(){hasInput?input.focus():!hasCancel||self.buttonReverse?btnOK.focus():btnCancel.focus()},this.bind(btnReset,"focus",reset),this.bind(btnResetBack,"focus",reset),hasOK&&this.bind(btnOK,"click",ok),hasCancel&&this.bind(btnCancel,"click",cancel),this.bind(document.body,"keyup",key),this.transition.supported||this.setFocus()},bind:function(el,event,fn){"function"==typeof el.addEventListener?el.addEventListener(event,fn,!1):el.attachEvent&&el.attachEvent("on"+event,fn)},handleErrors:function(){if("undefined"!=typeof global.onerror){var self=this;return global.onerror=function(msg,url,line){self.error("["+msg+" on line "+line+" of "+url+"]",0)},!0}return!1},appendButtons:function(secondary,primary){return this.buttonReverse?primary+secondary:secondary+primary},build:function(item){var html="",type=item.type,message=item.message,css=item.cssClass||"";switch(html+='<div class="alertify-dialog">',html+='<a id="alertify-resetFocusBack" class="alertify-resetFocus" href="#">Reset Focus</a>',"none"===_alertify.buttonFocus&&(html+='<a href="#" id="alertify-noneFocus" class="alertify-hidden"></a>'),"prompt"===type&&(html+='<div id="alertify-form">'),html+='<article class="alertify-inner">',html+=dialogs.message.replace("{{message}}",message),"prompt"===type&&(html+=dialogs.input),html+=dialogs.buttons.holder,html+="</article>","prompt"===type&&(html+="</div>"),html+='<a id="alertify-resetFocus" class="alertify-resetFocus" href="#">Reset Focus</a>',html+="</div>",type){case"confirm":html=html.replace("{{buttons}}",this.appendButtons(dialogs.buttons.cancel,dialogs.buttons.ok)),html=html.replace("{{ok}}",this.labels.ok).replace("{{cancel}}",this.labels.cancel);break;case"prompt":html=html.replace("{{buttons}}",this.appendButtons(dialogs.buttons.cancel,dialogs.buttons.submit)),html=html.replace("{{ok}}",this.labels.ok).replace("{{cancel}}",this.labels.cancel);break;case"alert":html=html.replace("{{buttons}}",dialogs.buttons.ok),html=html.replace("{{ok}}",this.labels.ok)}return elDialog.className="alertify alertify-"+type+" "+css,elCover.className="alertify-cover",html},close:function(elem,wait){var hideElement,transitionDone,timer=wait&&!isNaN(wait)?+wait:this.delay,self=this;this.bind(elem,"click",function(){hideElement(elem)}),transitionDone=function(event){event.stopPropagation(),self.unbind(this,self.transition.type,transitionDone),elLog.removeChild(this),elLog.hasChildNodes()||(elLog.className+=" alertify-logs-hidden")},hideElement=function(el){"undefined"!=typeof el&&el.parentNode===elLog&&(self.transition.supported?(self.bind(el,self.transition.type,transitionDone),el.className+=" alertify-log-hide"):(elLog.removeChild(el),elLog.hasChildNodes()||(elLog.className+=" alertify-logs-hidden")))},0!==wait&&setTimeout(function(){hideElement(elem)},timer)},dialog:function(message,type,fn,placeholder,cssClass){elCallee=document.activeElement;var check=function(){elLog&&null!==elLog.scrollTop&&elCover&&null!==elCover.scrollTop||check()};if("string"!=typeof message)throw new Error("message must be a string");if("string"!=typeof type)throw new Error("type must be a string");if("undefined"!=typeof fn&&"function"!=typeof fn)throw new Error("fn must be a function");return this.init(),check(),queue.push({type:type,message:message,callback:fn,placeholder:placeholder,cssClass:cssClass}),isopen||this.setup(),this},extend:function(type){if("string"!=typeof type)throw new Error("extend method must have exactly one paramter");return function(message,wait){return this.log(message,type,wait),this}},hide:function(){var transitionDone,self=this;queue.splice(0,1),queue.length>0?this.setup(!0):(isopen=!1,transitionDone=function(event){event.stopPropagation(),self.unbind(elDialog,self.transition.type,transitionDone)},this.transition.supported?(this.bind(elDialog,this.transition.type,transitionDone),elDialog.className="alertify alertify-hide alertify-hidden"):elDialog.className="alertify alertify-hide alertify-hidden alertify-isHidden",elCover.className="alertify-cover alertify-cover-hidden",elCallee.focus())},init:function(){document.createElement("nav"),document.createElement("article"),document.createElement("section"),null===$("alertify-cover")&&(elCover=document.createElement("div"),elCover.setAttribute("id","alertify-cover"),elCover.className="alertify-cover alertify-cover-hidden",document.body.appendChild(elCover)),null===$("alertify")&&(isopen=!1,queue=[],elDialog=document.createElement("section"),elDialog.setAttribute("id","alertify"),elDialog.className="alertify alertify-hidden",document.body.appendChild(elDialog)),null===$("alertify-logs")&&(elLog=document.createElement("section"),elLog.setAttribute("id","alertify-logs"),elLog.className="alertify-logs alertify-logs-hidden",document.body.appendChild(elLog)),document.body.setAttribute("tabindex","0"),this.transition=getTransitionEvent()},log:function(message,type,wait){var check=function(){elLog&&null!==elLog.scrollTop||check()};return this.init(),check(),elLog.className="alertify-logs",this.notify(message,type,wait),this},notify:function(message,type,wait){var log=document.createElement("article");log.className="alertify-log"+("string"==typeof type&&""!==type?" alertify-log-"+type:""),log.innerHTML=message,elLog.appendChild(log),setTimeout(function(){log.className=log.className+" alertify-log-show"},50),this.close(log,wait)},set:function(args){var k;if("object"!=typeof args&&args instanceof Array)throw new Error("args must be an object");for(k in args)args.hasOwnProperty(k)&&(this[k]=args[k])},setFocus:function(){input?(input.focus(),input.select()):btnFocus.focus()},setup:function(fromQueue){var transitionDone,item=queue[0],self=this;isopen=!0,transitionDone=function(event){event.stopPropagation(),self.setFocus(),self.unbind(elDialog,self.transition.type,transitionDone)},this.transition.supported&&!fromQueue&&this.bind(elDialog,this.transition.type,transitionDone),elDialog.innerHTML=this.build(item),btnReset=$("alertify-resetFocus"),btnResetBack=$("alertify-resetFocusBack"),btnOK=$("alertify-ok")||void 0,btnCancel=$("alertify-cancel")||void 0,form=$("alertify-form")||void 0,"string"==typeof item.placeholder&&""!==item.placeholder&&(input.value=item.placeholder),fromQueue&&this.setFocus(),this.addListeners(item.callback)},unbind:function(el,event,fn){"function"==typeof el.removeEventListener?el.removeEventListener(event,fn,!1):el.detachEvent&&el.detachEvent("on"+event,fn)}},{alert:function(message,fn,cssClass){return _alertify.dialog(message,"alert",fn,"",cssClass),this},confirm:function(message,fn,cssClass){return _alertify.dialog(message,"confirm",fn,"",cssClass),this},extend:_alertify.extend,init:_alertify.init,log:function(message,type,wait){return _alertify.log(message,type,wait),this},prompt:function(message,fn,placeholder,cssClass){return _alertify.dialog(message,"prompt",fn,placeholder,cssClass),this},success:function(message,wait){return _alertify.log(message,"success",wait),this},error:function(message,wait){return _alertify.log(message,"error",wait),this},set:function(args){_alertify.set(args)},labels:_alertify.labels,debug:_alertify.handleErrors}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.clickSubItem=function(){$scope.funcName()}}]),angular.module("core").controller("HomeController",["$scope","Authentication","$location",function($scope,Authentication,$location){$scope.authentication=Authentication,$scope.authentication.user||$location.path("/signin")}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)if(this.roles.isArray){for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0}else if("string"==typeof this.roles&&this.roles===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,iconClass,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,iconClass:iconClass,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").service("Sizer",["$window",function($window){var window=angular.element($window);this.updateElementSizeToStrech=function(element,heightToRemove){element.css("height",window.height()-heightToRemove+"px")},this.getWindowElement=function(){return window}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","Alerts",function($scope,$http,$location,Authentication,Alerts){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){Alerts.error(response.message)})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){Alerts.error(response.message)})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","Alerts",function($scope,$http,$location,Users,Authentication,Alerts){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){var user=new Users($scope.user);$scope.isLoading=!0,user.$update(function(response){$scope.isLoading=!1,Alerts.success("Profile Saved Successfully"),Authentication.user=response,$scope.user=Authentication.user},function(response){Alerts.error(response.data.message)})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",["$location",function($location){var _this=this;return _this._data={user:window.user},_this._data.validateSignin=function(){_this._data.user||$location.path("")},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);